{"version":3,"sources":["components/login.js","components/upload.js","components/gallery.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","baseUrl","onChange","e","setState","target","name","value","onSubmit","preventDefault","state","username","password","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","accessToken","jwt","sessionStorage","setItem","window","location","reload","alert","getItem","className","this","to","placeholder","required","type","Component","contextTypes","router","PropTypes","object","Upload","fileObj","fileArray","allowedExtensions","uploadImages","afterUploadMessage","validateFiles","files","a","i","fileName","item","split","image","Image","url","URL","createObjectURL","src","Promise","res","onload","Math","min","width","height","file","description","undefined","validImage","length","handleClick","inputElement","click","filesButton","event","images","push","uploadImagesFunc","responses","uploading","all","map","formData","FormData","append","status","dragOver","dragEnter","dragLeave","fileDrop","dataTransfer","valid","forEach","checkValidName","v","style","display","onClick","id","accept","multiple","ref","input","onDragOver","onDragEnter","onDragLeave","onDrop","color","uploadClick","upload","backgroundImage","defaultValue","forceUpdate","Gallery","React","useState","setImages","loaded","setIsLoaded","page","nextPage","onPageLoad","message","useEffect","dataLength","next","hasMore","endMessage","textAlign","file240","createdAt","aria-hidden","newImages","splice","catch","err","onDelete","ProtectedRoute","Comp","component","loggedIn","rest","render","pathname","prevLocation","error","App","clear","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.27a6d6f2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './login.css';\r\nimport { Route,Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport default class Login extends Component {\r\n    baseUrl=\"https://localhost:3000\";\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            jwt : sessionStorage.getItem('token') || null\r\n        }\r\n    }\r\n    static contextTypes = {\r\n        router: PropTypes.object,\r\n      }\r\n    onChange = (e) =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit =(e) => {\r\n        e.preventDefault();\r\n        const { username, password } = this.state;\r\n        fetch(this.baseUrl +'/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(this.state)\r\n            \r\n        })\r\n        .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result);\r\n                if(result.accessToken){\r\n                    this.setState({\r\n                        jwt: result.accessToken\r\n                    })\r\n                    sessionStorage.setItem('token',result.accessToken);                 \r\n                    window.location.reload(false);\r\n                }\r\n                else{\r\n                    alert(\"Invalid credentials\");\r\n                }\r\n            })\r\n            \r\n            \r\n        \r\n    }\r\n\r\n    render() {\r\n               \r\n        return (           \r\n            \r\n            <div className=\"parent-login\">\r\n                {!this.state.jwt ? \r\n                (<div className=\"login-form\">\r\n                    <form className=\"form-login\" onSubmit={this.onSubmit}>\r\n                        <h3 className=\"h3 mb-3 font-weight-normal text-center\">Login</h3>\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input  className=\"form-control\" placeholder=\"Enter username\" name=\"username\"  required\r\n                                onChange={e => this.onChange(e)}/>            </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"password\" required\r\n                                onChange={e => this.onChange(e)}/>            </div>\r\n                        <button type=\"submit\" className=\"btn btn-block btn-primary\">Login</button>\r\n                    </form>\r\n                    <br />\r\n                </div>\r\n                \r\n                \r\n                 ):(\r\n                        <Redirect to=\"/gallery\"  />\r\n                    )\r\n                }\r\n            </div>\r\n               \r\n            \r\n            \r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport '../../node_modules/font-awesome/css/font-awesome.min.css'; \r\nimport './upload.css';\r\nimport './dropZone.css';\r\n\r\nexport default class Upload extends Component {\r\n    baseUrl=\"https://localhost:3000\";\r\n    fileObj =[];\r\n    fileArray=[];\r\n    allowedExtensions = ['jpg' , 'png' , 'svg']\r\n    uploadImages = [];\r\n    afterUploadMessage = \"NOTE: Images of size less than 500 would be rejected !!!\";\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            image: [],\r\n            uploading: false           \r\n        }\r\n       \r\n        \r\n    }\r\n    \r\n    \r\n  validateFiles = async function*(files) {\r\n    for(let i = 0; i< files.length ; i++){\r\n      \r\n      let fileName = files.item(i).name.split(\".\");\r\n      \r\n      if(fileName[0]){\r\n        let image = new Image();\r\n        let url = URL.createObjectURL(files.item(i));\r\n        image.src = url;\r\n\r\n        let validImage = await new Promise((res) => {\r\n          image.onload = () => {\r\n            let shortEdge = Math.min(image.width, image.height);\r\n            if(shortEdge >= 500){\r\n              res({\r\n                file: files.item(i),\r\n                name: fileName[0],\r\n                description: \"\",\r\n                url: url\r\n              });\r\n            }\r\n            else{\r\n              res(undefined);\r\n              this.afterUploadMessage = \"Some images are less than 500px. Ignoring them !!\"\r\n            }\r\n          }\r\n        });\r\n        yield validImage;\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.inputElement.click();\r\n  }\r\n\r\n  \r\n\r\n  filesButton = async(event) => {\r\n    this.afterUploadMessage = \"NOTE: Images of size less than 500 would be rejected !!!\";\r\n    let images = event.target.files;\r\n    let image = this.validateFiles(images);\r\n    for await(let file of image){\r\n      if(file !== undefined){\r\n        this.uploadImages.push(file);\r\n      }      \r\n    }\r\n    this.setState({\r\n        image: this.uploadImages\r\n        \r\n    })\r\n    //  console.log(this.uploadImages);\r\n    console.log(this.state);\r\n  }\r\n  \r\n\r\n  checkValidName() {\r\n    let valid = true;\r\n    this.uploadImages.forEach(image => {\r\n      if(!image.name){\r\n        valid = false; \r\n        return valid;\r\n      } \r\n            \r\n    });\r\n    return valid;\r\n  }\r\n  async uploadClick(){\r\n    let status = true;\r\n    if(this.uploadImages.length==0) return;\r\n    if(!this.checkValidName) return;\r\n    let val = await this.uploadImagesFunc(this.state.image)\r\n    val.forEach((v) => {\r\n        if(v !== 200){\r\n          status = false;\r\n        }\r\n      })\r\n      if (status) {\r\n        this.afterUploadMessage= \"Images uploaded successfully\";\r\n    }\r\n      else {\r\n        this.afterUploadMessage = \"Failed to upload one or more images !!\";\r\n      }\r\n    \r\n    \r\n    this.uploadImages=[];\r\n    this.setState({\r\n        image: this.uploadImages\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  uploadImagesFunc=async (images) => {\r\n    let responses=[];\r\n    this.setState({\r\n      uploading: true\r\n    });\r\n    await Promise.all(\r\n        \r\n        images.map(async (file) => {\r\n            let formData = new FormData;\r\n            formData.append('file',file.file);\r\n            formData.append('name', file.name);\r\n            formData.append('description', file.description);\r\n            console.log(\"sending form data\");\r\n            let response = await fetch(this.baseUrl+'/upload',{\r\n                method:'POST',\r\n                body: formData\r\n            })\r\n            responses.push(response.status);\r\n\r\n        })\r\n    )\r\n    this.setState({\r\n      uploading: false\r\n    })\r\n    return responses;    \r\n  }\r\n\r\n  \r\n    dragOver = (e) => {\r\n      e.preventDefault();\r\n    }\r\n\r\n    dragEnter = (e) => {\r\n      e.preventDefault();\r\n    }\r\n\r\n    dragLeave = (e) => {\r\n      e.preventDefault();\r\n    }\r\n\r\n    fileDrop = async(e) => {\r\n      e.preventDefault();\r\n      const images = e.dataTransfer.files;\r\n      let image = this.validateFiles(images);\r\n      for await(let file of image){\r\n        if(file !== undefined){\r\n          this.uploadImages.push(file);\r\n        }      \r\n      }\r\n      this.setState({\r\n          image: this.uploadImages\r\n          \r\n      })\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n\r\n            <div className=\"container\">\r\n              \r\n\r\n            <h1> UPLOAD FILES</h1>\r\n            <div className=\"button-container\" style={{display:\"none\"}}>\r\n                <div className=\"hover\">\r\n                    \r\n\r\n                    <div className=\"fileUpload btns btn-secondary\">\r\n                        <a className=\"social-link\" onClick={this.handleClick}>\r\n                            <i className=\"fa fa-image\"></i>\r\n                        </a>\r\n                        <input className=\"upload\" id=\"files\" name=\"files\" type=\"file\" accept=\"image/*\" multiple onChange={event => this.filesButton(event)}\r\n                        ref={input => this.inputElement = input}  />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n              <div className=\"DZcontainer\" onClick={this.handleClick}>\r\n                  <div className=\"drop-container\"\r\n                  onDragOver={this.dragOver}\r\n                  onDragEnter={this.dragEnter}\r\n                  onDragLeave={this.dragLeave}\r\n                  onDrop={this.fileDrop}\r\n                  >\r\n                  <div className=\"drop-message\" >\r\n                      <div className=\"upload-icon\"></div>\r\n                          Drag & Drop files here or click to upload\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"alert-message-container\">\r\n                <span className=\"alert-message\">{ this.afterUploadMessage }</span>\r\n            </div>\r\n            {(!this.state.uploading) ? \r\n              (<div className=\"upload-container\">\r\n                  <div className=\"vertical-center\">\r\n                      <button className=\"btn draw-border\"  onClick={() => this.uploadClick()}>Upload</button>\r\n                  </div>\r\n              </div>):\r\n\r\n                (<Loader className=\"loader\"\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n                height={50}\r\n                width={50}\r\n\r\n\r\n                />)\r\n            }\r\n            \r\n\r\n            <div className=\"image-view\">\r\n\r\n                <ul className=\"cards\">\r\n                    \r\n                    {(this.uploadImages || []).map( (upload,i) => {\r\n                        return (\r\n                        <li className=\"cards__item\" key={i} >\r\n                        <div className=\"card\">\r\n                            <div className=\"card__image \" style={{backgroundImage: `url(${upload.url})` }}></div>\r\n                            <div className=\"card__content\">\r\n                                <div className=\"card__title\">\r\n                                    <input id={`name${i}`} name=\"name{i}\" type=\"text\" defaultValue={upload.name} onChange={(e) => {\r\n                                        this.state.image[i].name = e.target.value;\r\n                                        this.forceUpdate()\r\n                                    }}/>\r\n                                </div>\r\n                                \r\n                                {(upload.name.length===0) ? (<span className=\"warning-text\">\r\n                                    Image name empty\r\n                                </span>): null}\r\n                                <div className=\"card__title\">\r\n                                    <input id={`description${i}`} name=\"description{i}\" type=\"text\" placeholder=\"#description \" onChange={(e) => {\r\n                                        this.state.image[i].description = e.target.value;\r\n                                        this.forceUpdate()\r\n                                    }}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    )\r\n                    })}\r\n                    \r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n                );\r\n    }\r\n}","import React, { Component, useEffect, useReducer } from \"react\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport './gallery.css';\r\n\r\nexport default function Gallery() {\r\n    const baseUrl=\"https://localhost:3000\";\r\n    \r\n    const [images, setImages] = React.useState([]);\r\n    const [loaded, setIsLoaded] = React.useState(false); \r\n    const [page, nextPage] = React.useState(1);    \r\n\r\n    const onPageLoad = () => {\r\n        \r\n            fetch(`${baseUrl}/search?query=_page:${page}`,{\r\n                method:'GET'\r\n            })  \r\n            .then((response)=> {\r\n                (response.json().then((res) => {\r\n                    setImages([...images, ...res.message]);\r\n                    setIsLoaded(true);\r\n                    nextPage(page + 1);                    \r\n                }));\r\n            })\r\n        \r\n        \r\n    }\r\n    React.useEffect(() => {\r\n        onPageLoad();\r\n    }, []);\r\n\r\n    const onDelete = (id,i)=> {\r\n        console.log(id);\r\n        fetch(`${baseUrl}/delete/${id}`,{\r\n            method: 'POST'\r\n        })\r\n        .then((res) => {\r\n            res.json().then((result) => {\r\n                console.log(result);\r\n                let newImages=[...images];\r\n                newImages.splice(i,1);\r\n                setImages([...newImages]);\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.json());\r\n            alert(\"Failed to delete image\");\r\n        })\r\n    }\r\n    \r\n      \r\n        return (\r\n            \r\n            <div className=\"parentElement\">\r\n               <div className=\"image-view\">\r\n                <InfiniteScroll\r\n                dataLength={images}\r\n                next={() => {\r\n                    onPageLoad();\r\n                }}\r\n                hasMore={true}\r\n                endMessage={\r\n                    <p style={{ textAlign: 'center' }}>\r\n                    <b>Yay! You have seen it all</b>\r\n                    </p>\r\n                }>\r\n                    <div className=\"row\">\r\n                        <ul className=\"cards\">\r\n                    \r\n                        {loaded ? (images || []).map( (upload,i) => {\r\n                            return(\r\n                            <li className=\"cards__item\" key={i}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"card__image \" style={{backgroundImage: `url(${baseUrl}/${upload.file240})` }}>\r\n                                    </div>\r\n\r\n                                    <div className=\"card__content\">\r\n                                        <div className=\"card__title\">\r\n                                            <span id={`name${i}`}>{ upload.name }</span>\r\n                                        </div>\r\n                                        <p className=\"card__text\" id={`cardText${i}`}>\r\n                                            <span className=\"date\">{ upload.createdAt }</span>\r\n                                            <br />\r\n                                            <br />\r\n                                            <span className=\"hashtag\">{ upload.description }</span>\r\n                                        </p>\r\n                                    </div>\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={() => onDelete(upload.id,i)}></i>\r\n                                </div>\r\n                            </li>\r\n                            )\r\n                         }):\"\"}\r\n                         \r\n\r\n                        </ul>\r\n                        \r\n                    </div>\r\n                    </InfiniteScroll>\r\n                </div>\r\n            </div>\r\n            );\r\n    \r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Comp, loggedIn, ...rest}) => {\r\n    return (\r\n        <Route \r\n        {...rest}\r\n        render = {(props) => {\r\n            return loggedIn ? (\r\n                <Comp {...props} />\r\n            ) : (\r\n                <Redirect to={{\r\n                    pathname: \"/\",\r\n                    state: {\r\n                        prevLocation: \"/\",\r\n                        error: \"You must log in first !!\"\r\n                    }\r\n                }}\r\n            />\r\n            )\r\n            \r\n        }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Login from \"./components/login\";\nimport Upload from \"./components/upload\";\nimport Gallery from \"./components/gallery\";\nimport ProtectedRoute from './components/ProtectedRoute';\n\nclass App extends React.Component {\n  state={\n    loggedIn : sessionStorage.getItem('token') ? true: false,\n    error: !sessionStorage.getItem('token') ? \"You must log in first\" : ''\n  }\n  render() {\n    const { error } = this.state.error;\n    \n  return (<Router>\n    <div className=\"App\">\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to={\"/gallery\"}>ImageStack</Link>       \n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                </li>\n\n            </ul>\n            <ul className=\"navbar-nav \">\n                <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/gallery\"}>Gallery</Link>\n                </li>\n                <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/upload-images\"}>Upload</Link>\n                </li>\n                <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/\"} onClick={() => { sessionStorage.clear(); window.location.reload() }}>Logout</Link>\n                </li>\n\n            </ul>\n        </div>\n    </nav>     \n\n      <div className=\"outer\">\n        {error && alert({error})}\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route path=\"/sign-in\" component={Login} />\n            <ProtectedRoute path=\"/upload-images\" loggedIn={this.state.loggedIn} component={Upload} />\n            <ProtectedRoute path=\"/gallery\" loggedIn={this.state.loggedIn} component={Gallery}/>\n            <ProtectedRoute path=\"/\" loggedIn={this.state.loggedIn} component={Gallery} />\n          </Switch>\n      </div>\n    </div></Router>\n  )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}